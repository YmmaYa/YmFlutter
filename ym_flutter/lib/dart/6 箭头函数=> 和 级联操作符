
✈️✈️✈️✈️✈️✈️✈️✈️✈️✈️ 箭头函数 ✈️✈️✈️✈️✈️✈️✈️✈️✈️✈️
在Dart中，  "=>符号"  用于定义箭头函数（Arrow Function），也称为  "匿名函数"  或  "Lambda函数" 。
⚠️ 函数体只有一行代码！！
～～～～～～～～～～～～～～
基本语法：
       返回值类型 函数名(参数) => 表达式;
等价于：
        返回值类型 函数名(参数) {
          return 表达式;
        }
～～～～～～～～～～～～～～


✈️✈️✈️✈️✈️✈️✈️✈️✈️✈️ 级联操作符 ✈️✈️✈️✈️✈️✈️✈️✈️✈️✈️
在 Dart 中，级联操作符（Cascade Notation） ..（或 ?..）允许你在同一个对象上连续调用多个方法或访问多个属性，而无需每次都重复引用该对象。
～～～～～～～～～～～～～～
基本语法：
       对象..方法1()..方法2()..属性 = 值;
等价于：
        对象.方法1();
        对象.方法2();
        对象.属性 = 值;
～～～～～～～～～～～～～～

‼️ .. 和 ?.. 的区别
    ❄️ ..    ：用于非空对象（确保对象不为 null）。
    ❄️ ?..   ：用于可能为 null 的对象（类似于 ?. 的安全调用）。

⚠️⚠️ ?..（空安全级联操作符）必须放在级联操作的最前面，不能放在 .. 后面 ⚠️⚠️
Q：为什么 ?.. 必须放在最前面？‼️
A：答：Dart 的级联操作符 (.. 和 ?..) 是从左到右执行的：
            （1）?.. 会先检查对象是否为 null：
                    ** 如果是 null，则跳过整个级联链。
                    ** 如果不是 null，则继续执行后续级联操作。
            （2）.. 直接执行操作，不检查 null。
      如果 ?.. 不是第一个操作符，Dart 无法保证空安全，因此会报错。

举例：
                LiveRoomConfig? liveRoomConfig = null;
                liveRoomConfig
                  ?..theme = 'dark'
                  ?..password = 123456; // ❌ 错误：`?..` 必须在级联的最前面
                Dart 要求如果使用 ?..（空安全级联），它必须是级联链的第一个操作符，否则会报错。

      正确做法：
                liveRoomConfig
                  ?..theme = 'dark'     // ✅ `?..` 是第一个级联操作符
                  ..password = 123456;  // 后续用 `..`（因为 `liveRoomConfig` 已经由 `?..` 处理）